defmodule CinderShowcase.Repo.Migrations.CreateShowcaseResources do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :email, :text, null: false
      add :name, :text, null: false
      add :status, :text
      add :profile, :map

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:projects, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :name, :text, null: false
      add :description, :text
      add :status, :text
      add :deadline, :date
      add :budget, :decimal

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :department_id, :uuid
    end

    create table(:posts, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :title, :text, null: false
      add :content, :text
      add :published, :boolean
      add :view_count, :bigint

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :author_id,
          references(:users,
            column: :id,
            name: "posts_author_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:departments, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:projects) do
      modify :department_id,
             references(:departments,
               column: :id,
               name: "projects_department_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:departments) do
      add :name, :text, null: false
      add :description, :text
      add :budget, :decimal
      add :head_count, :bigint

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:comments, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :content, :text, null: false
      add :approved, :boolean

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :post_id,
          references(:posts,
            column: :id,
            name: "comments_post_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :author_id,
          references(:users,
            column: :id,
            name: "comments_author_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:assignments, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :role, :text, null: false
      add :start_date, :date
      add :end_date, :date
      add :hours_per_week, :bigint

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :user_id,
          references(:users,
            column: :id,
            name: "assignments_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :project_id,
          references(:projects,
            column: :id,
            name: "assignments_project_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end
  end

  def down do
    drop constraint(:assignments, "assignments_user_id_fkey")

    drop constraint(:assignments, "assignments_project_id_fkey")

    drop table(:assignments)

    drop constraint(:comments, "comments_post_id_fkey")

    drop constraint(:comments, "comments_author_id_fkey")

    drop table(:comments)

    alter table(:departments) do
      remove :updated_at
      remove :inserted_at
      remove :head_count
      remove :budget
      remove :description
      remove :name
    end

    drop constraint(:projects, "projects_department_id_fkey")

    alter table(:projects) do
      modify :department_id, :uuid
    end

    drop table(:departments)

    drop constraint(:posts, "posts_author_id_fkey")

    drop table(:posts)

    drop table(:projects)

    drop table(:users)
  end
end
